ARAW Climate Finance Dashboard - AWS EC2 QA Deployment Guide
=============================================================
Date: 2025-09-12
Environment: QA
Domain: araw-qa.ncience.com
Repository: https://github.com/carlo-ubqty/araw
Branch: qa (for QA environment)
Server: AWS EC2 Instance

DEPLOYMENT CHECKLIST
====================
☑️ Git Repository Setup - COMPLETED
   - Code pushed to: https://github.com/carlo-ubqty/araw
   - SSH authentication configured
   - 152 objects, 11.90 MiB uploaded successfully

🔄 AWS EC2 Server Setup - IN PROGRESS
🔄 Domain Configuration (araw-qa.ncience.com) - PENDING
🔄 SSL Certificate Setup - PENDING
🔄 Production Deployment - PENDING

EC2 SERVER SETUP COMMANDS
==========================

STEP 0: Create araw_admin User (run as ubuntu/root)
---------------------------------------------------
# Create new user
sudo adduser araw_admin
# (Set password when prompted)

# Add to sudo group
sudo usermod -aG sudo araw_admin

# Add to www-data group for web server permissions
sudo usermod -aG www-data araw_admin

# Switch to new user
sudo su - araw_admin

# Verify user
whoami  # Should show: araw_admin
groups  # Should show: araw_admin sudo www-data

STEP 1: System Update & Node.js Installation (as araw_admin)
---------------------------------------------
# Update system packages
sudo apt update && sudo apt upgrade -y

# Install Node.js 18.x (LTS) - required for Next.js 15.5.3
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs

# Verify installation
node --version  # Should show v18.x.x
npm --version   # Should show compatible version

STEP 2: Install Additional Dependencies
---------------------------------------
# Install PM2 for process management
sudo npm install -g pm2

# Install Nginx for reverse proxy
sudo apt install nginx -y

# Install Git (if not already installed)
sudo apt install git -y

# Verify installations
pm2 --version
nginx -v
git --version

STEP 3: Clone Repository (as araw_admin)
-----------------------------------------
# Configure Git with your credentials
git config --global user.name "carlo-ubqty"
git config --global user.email "carlo@ubqty.net"

# Create application directory  
sudo mkdir -p /opt
cd /opt

# Clone your dashboard (qa branch for QA environment)
git clone -b qa https://github.com/carlo-ubqty/araw.git

# Move to proper production location
sudo mkdir -p /var/www/ubqty
sudo chown -R araw_admin:www-data /var/www/ubqty
sudo mv /opt/araw /var/www/ubqty/araw

# Fix nested directory structure (if needed)
cd /var/www/ubqty/araw
sudo mv araw/* . 2>/dev/null || true
sudo mv araw/.[^.]* . 2>/dev/null || true
sudo rmdir araw 2>/dev/null || true

# Set proper permissions for web server
sudo chown -R araw_admin:www-data /var/www/ubqty/araw
chmod -R 755 /var/www/ubqty/araw

STEP 4: Install Dependencies & Build
------------------------------------
# Install dependencies
npm install

# Build for production
npm run build

# Test the application (temporary)
npm start  # Should run on port 3000

STEP 5: PM2 Process Management Setup
------------------------------------
# Create PM2 ecosystem file
cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [
    {
      name: 'araw-dashboard',
      script: 'npm',
      args: 'start',
      cwd: '/var/www/ubqty/araw',
      instances: 1,
      autorestart: true,
      watch: false,
      max_memory_restart: '1G',
      env: {
        NODE_ENV: 'production',
        PORT: 3000
      }
    }
  ]
};
EOF

# Start application with PM2
pm2 start ecosystem.config.js

# Save PM2 configuration
pm2 save

# Setup PM2 to start on boot
pm2 startup
# (Follow the command it provides)

STEP 6: Nginx Configuration
---------------------------
# Create Nginx site configuration
sudo tee /etc/nginx/sites-available/araw-qa.ncience.com << 'EOF'
server {
    listen 80;
    server_name araw-qa.ncience.com;
    
    # Redirect HTTP to HTTPS (after SSL setup)
    # return 301 https://$server_name$request_uri;
    
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
EOF

# Enable the site
sudo ln -s /etc/nginx/sites-available/araw-qa.ncience.com /etc/nginx/sites-enabled/

# Remove default site
sudo rm /etc/nginx/sites-enabled/default

# Test Nginx configuration
sudo nginx -t

# Restart Nginx
sudo systemctl restart nginx

# Enable Nginx to start on boot
sudo systemctl enable nginx

STEP 7: SSL Certificate with Certbot
------------------------------------
# Install Certbot
sudo apt install snapd -y
sudo snap install core; sudo snap refresh core
sudo snap install --classic certbot

# Create symlink
sudo ln -s /snap/bin/certbot /usr/bin/certbot

# Get SSL certificate (run AFTER domain DNS is configured)
sudo certbot --nginx -d araw-qa.ncience.com

# Auto-renewal setup (should be automatic)
sudo certbot renew --dry-run

DOMAIN CONFIGURATION
====================

DNS RECORDS NEEDED:
------------------
Type: A
Name: araw-qa.ncience.com  
Value: [EC2_INSTANCE_PUBLIC_IP]
TTL: 300 (5 minutes)

OR if using subdomain:
Type: CNAME
Name: araw-qa
Value: [EC2_INSTANCE_PUBLIC_DNS]
TTL: 300

FIREWALL/SECURITY GROUP SETTINGS:
---------------------------------
Inbound Rules:
- HTTP (80): 0.0.0.0/0
- HTTPS (443): 0.0.0.0/0  
- SSH (22): Your IP only

PRODUCTION ENVIRONMENT VARIABLES
================================
Create .env.local file if needed:

# Database (when ready)
DATABASE_URL="postgresql://user:password@localhost:5432/araw_db"

# Authentication (when implemented)
NEXTAUTH_SECRET="your-secret-key"
NEXTAUTH_URL="https://araw-qa.ncience.com"

# Other environment variables as needed

MONITORING & MAINTENANCE
========================

Useful PM2 Commands:
-------------------
pm2 status                  # Check application status
pm2 logs araw-dashboard     # View logs
pm2 restart araw-dashboard  # Restart application
pm2 reload araw-dashboard   # Zero-downtime reload

Useful Nginx Commands:
---------------------
sudo nginx -t               # Test configuration
sudo systemctl reload nginx # Reload configuration
sudo systemctl restart nginx # Restart service

Log Locations:
-------------
Application Logs: ~/.pm2/logs/
Nginx Access: /var/log/nginx/access.log
Nginx Error: /var/log/nginx/error.log

DEPLOYMENT STATUS TRACKING
==========================
☑️ Create araw_admin User & Setup Permissions
☑️ System Update & Node.js Installation  
☑️ Install Additional Dependencies (PM2, Nginx, Git)
☑️ Clone Repository to /var/www/ubqty/araw (qa branch)
☑️ Install Dependencies & Build Application
☑️ Configure PM2 Process Management (app running: PID 9499)
☑️ Configure Nginx Reverse Proxy - COMPLETE
☑️ Verify Production Deployment - COMPLETE ✨
☑️ Configure Domain DNS (araw-qa.ncience.com) - COMPLETE
🔄 Install SSL Certificate with Certbot - IN PROGRESS

📍 DOMAIN VERIFICATION SUCCESS:
✅ EC2 Public IP: 52.63.52.103
✅ DNS Resolution: araw-qa.ncience.com → 52.63.52.103
✅ HTTP Access: 200 OK response confirmed
✅ Next.js: Application serving correctly via domain

🎉 APPLICATION SUCCESSFULLY DEPLOYED AND RUNNING!
✅ Direct Access: http://[EC2-IP]:3000 - Working
✅ Nginx Proxy: http://[EC2-IP]:80 - Working  
✅ Dashboard: All 8 sections rendering perfectly
✅ Build: 263 kB optimized bundle  
✅ PM2: Auto-startup configured
✅ Nginx: Reverse proxy active
✅ Responsive Design: Tablet and mobile optimized

ROLLBACK PLAN
=============
If deployment fails:
1. Check PM2 logs: pm2 logs araw-dashboard
2. Check Nginx logs: sudo tail -f /var/log/nginx/error.log
3. Restart services: pm2 restart all && sudo systemctl restart nginx
4. Verify DNS propagation: nslookup araw-qa.ncience.com

QA BRANCH MANAGEMENT
====================
Current Setup:
- QA Environment uses 'qa' branch
- Production (future) will use 'main' branch

To update QA environment with new changes:
```bash
# On local machine:
git checkout main
git pull origin main
git checkout qa
git merge main
git push origin qa

# On EC2 server:
cd /var/www/ubqty/araw
git pull origin qa
npm install  # if package.json changed
npm run build
pm2 restart araw-dashboard
```

NEXT STEPS AFTER EC2 SETUP
==========================
1. Complete EC2 server configuration
2. Configure DNS for araw-qa.ncience.com  
3. Set up SSL certificate
4. Final production testing
5. Monitor application performance

TECHNICAL STACK DEPLOYED
========================
- Frontend: NextJS 15.5.3 + HeroUI 2.8.4 + TypeScript
- Charts: Recharts with custom implementations
- Maps: Leaflet + react-leaflet for Philippines choropleth  
- Styling: Tailwind CSS + responsive design
- Process Manager: PM2
- Web Server: Nginx (reverse proxy)
- SSL: Let's Encrypt (Certbot)
- Infrastructure: AWS EC2
